{
 "Description": "Spectrum CloudFormation Cluster Template: Provisions a Spectrum 22.1 cluster deployment on mulitple EC2 instance. **WARNING** You will be billed by AWS for the AWS resources if you create a stack from this template.",
 "Metadata": {
  "AWS::CloudFormation::Interface": {
   "ParameterGroups": [
    {
     "Label": {
      "default": "Amazon EC2 Configuration"
     },
     "Parameters": [
      "PlatformVersion",
      "AMIId",
      "KeypairName",
      "InstanceCount"
     ]
    },
    {
     "Label": {
      "default": "EC2 Network Configuration"
     },
     "Parameters":[
        "NetworkInterface",
        "VpcId",
        "SecurityGroupIds"
     ]
    },
    {
     "Label": {
      "default": "Elastic Load Balancer Configuration"
     },
     "Parameters": [
      "ELBName",
      "Scheme",
      "IpAddressType",
      "SubnetMappings",
      "SubnetId1",
      "SubnetId2"
     ]
    },
    {
     "Label": {
      "default": "Elastic Load Balancer Target Group Configuration"
     },
     "Parameters": [
      "TargetGroupName",
      "Protocol",
      "TargetType",
      "TargetVpcId"
     ]
    },
    {
     "Label": {
      "default": "Elastic Load Balancer Target Group Listener Configuration"
     },
     "Parameters": [
      "ListenerType"
     ]
    },
    {
     "Label": {
      "default": "Spectrum Configuration"
     },
     "Parameters": [
      "InstanceType",
      "InstanceDriveSize"
     ]
    }
   ],
   "ParameterLabels": {
    "PlatformVersion": {
     "default": "Platform Type (Required)"
    },
    "AMIId": {
     "default": "EC2 Instance AMI ID (Required)"
    },
    "KeypairName": {
     "default": "EC2 Instance Keypair Name (Required)"
    },
    "InstanceCount": {
     "default": "Number of EC2 instances for cluster (Required)"
    },
    "VpcId": {
    "default": "VPC ID (Required)"
    },
    "SecurityGroupIds": {
    "default": "Security Groups ID"
    },
    "IpAddressType": {
     "default": "Elastic Load Balancer IP Address Type (Required)"
    },
    "Name": {
     "default": "Elastic Load Balancer Name (Required)"
    },
    "Scheme": {
    "default": "Elastic Load Balancer Scheme (Required)"
    },
    "TargetGroupName": {
     "default": "Elastic Load Balancer Target Group Name (Required)"
    },
    "Protocol": {
     "default": "Elastic Load Balancer Target Protocol Type (Required)"
    },
    "TargetType": {
     "default": "Elastic Load Balancer Target Group Type (Required)"
    },
    "TargetVpcId": {
    "default": "Elastic Load Balancer Target Group VPC Id (Required)"
    },
    "ListenerType": {
    "default": "Elastic Load Balancer Target Group Listener Type (Required)"
    },
    "InstanceType": {
     "default": "EC2 Instance Type (Required)"
    },
    "InstanceDriveSize": {
     "default": "EC2 Instance Root Drive Disk Space (Required)"
    }
   }
  }
 },
 "Parameters": {
    "PlatformVersion": {
     "Type": "String",
     "AllowedValues": [
      "Windows 2019",
      "Windows 2016 - Under Development",
      "Windows 2012 RC - Under Development"
     ],
     "ConstraintDescription": "You must specify Windows Server version.",
     "Description": "Choose the Windows Server version. Supported versions are Windows Server 2019, Windows Server 2016 & Windows Server 2012 R2. For supported operating systems refer to https://docs.precisely.com/docs/sftw/spectrum-all-supportview/22.1/en-us/pdf/Spectrum_2022.1.0_InstallationGuide_Windows.pdf."
    },
    "AMIId": {
     "Type": "String",
     "Default": "ami-092a42840b5e5add1",
     "AllowedValues": [
        "ami-092a42840b5e5add1",
        "ami - Under Development",
        "ami - Under Development"
       ],
     "Description": "For Windows Server 2019, use ami id: ami-092a42840b5e5add1. For Windows Server 2016, use ami id: ami-TBD. For Windows Server 2012 RC, use ami id: ami-TBD"
    },
    "KeypairName": {
     "Type": "AWS::EC2::KeyPair::KeyName",
     "AllowedPattern": "^[\\S]+(?: +[\\S]+)*$",
     "ConstraintDescription": "The name can include up to 255 ASCII characters. It cannot include leading or trailing spaces.",
     "Description": "Choose an EC2 KeyPair to allow remote access to the EC2 instances."
    },
    "InstanceCount": {
     "Type": "Number",
     "Default": 3,
     "MinValue" : 3,
     "MaxValue" : 7,
     "ConstraintDescription": "Must be a number between 3-7",
     "Description": "Choose how many EC2 instances will be in the clustered deployment."
    },
    "SecurityGroupIds": {
     "Type": "List<AWS::EC2::SecurityGroup::Id>",
     "AllowedPattern": "^sg-[a-z0-9]*$",
     "Description": "Choose one or multiple security groups."
    },
    "IpAddressType": {
     "Type": "String",
     "AllowedValues": [
         "dualstack",
         "ipv4"
         ],
     "ConstraintDescription": "Must be dualstack or ipv4",
     "Description": "Choose an IP Address type for the Elastic Load Balancer"
    },
    "ELBName": {
     "Type": "String",
     "Description": "Choose a name for your Elastic Load Balancer"
    },
    "Scheme": {
     "Type": "String",
     "AllowedValues": [
         "internal",
         "internet-facing"
         ],
     "Description": "Choose the scheme of your ELB."
    },
    "SubnetId1": {
     "Type": "AWS::EC2::Subnet::Id",
     "Description": "Choose a Subnet ID for your ELB."
    },
    "SubnetId2": {
     "Type": "AWS::EC2::Subnet::Id",
     "Description": "Choose a Subnet ID for your ELB."
    },
    "TargetGroupName": {
     "Type": "String",
     "Description": "Choose a name for the target group"
    },
    "Protocol": {
     "Type": "String",
     "AllowedValues": [
         "GENEVE",
         "HTTP",
         "HTTPS",
         "TCP",
         "TCP_UDP",
         "TLS",
         "UDP"
         ],
     "Description": "Choose a target type for the target group"
    },
    "TargetType": {
     "Type": "String",
     "AllowedValues": [
         "alb",
         "instance",
         "ip",
         "lambda"
         ],
     "Description": "Choose a target type for the target group"
    },
    "TargetVpcId": {
     "Type": "AWS::EC2::VPC::Id",
     "Description": "Choose the VPC of your target group."
    },
    "ListenerType": {
     "Type": "String",
     "AllowedValues": [
         "authenticate-cognito",
         "authenticate-oidc",
         "fixed-response",
         "forward",
         "redirect"
         ],
     "Description": "Choose a target type for the target group"
    },
    "InstanceType": {
     "Type": "String",
     "Default": "t2.xlarge",
     "AllowedValues": [
      "c3.xlarge",
      "c3.2xlarge",
      "c3.4xlarge",
      "c3.8xlarge",
      "c4.xlarge",
      "c4.2xlarge",
      "c4.4xlarge",
      "c4.8xlarge",
      "c5.2xlarge",
      "c5.4xlarge",
      "c5.9xlarge",
      "c5.18xlarge",
      "c5.xlarge",
      "c5n.xlarge",
      "c5n.2xlarge",
      "c5n.4xlarge",
      "c5n.9xlarge",
      "c5n.18xlarge",
      "m3.xlarge",
      "m3.2xlarge",
      "m4.xlarge",
      "m4.2xlarge",
      "m4.4xlarge",
      "m4.10xlarge",
      "m4.16xlarge",
      "m5.xlarge",
      "m5.2xlarge",
      "m5.4xlarge",
      "m5.12xlarge",
      "m5.24xlarge",
      "m5.metal",
      "m5a.xlarge",
      "m5a.2xlarge",
      "m5a.4xlarge",
      "m5a.12xlarge",
      "m5a.24xlarge",
      "p3.2xlarge",
      "p3.8xlarge",
      "p3.16xlarge",
      "r3.xlarge",
      "r3.2xlarge",
      "r3.4xlarge",
      "r3.8xlarge",
      "r4.xlarge",
      "r4.2xlarge",
      "r4.4xlarge",
      "r4.8xlarge",
      "r4.16xlarge",
      "r5.xlarge",
      "r5.2xlarge",
      "r5.4xlarge",
      "r5.12xlarge",
      "r5.24xlarge",
      "r5.metal",
      "r5a.xlarge",
      "r5a.2xlarge",
      "r5a.4xlarge",
      "r5a.12xlarge",
      "r5a.24xlarge",
      "t2.xlarge",
      "t2.2xlarge",
      "t3.xlarge",
      "t3.2xlarge",
      "x1.16xlarge",
      "x1.32xlarge",
      "x1e.xlarge",
      "x1e.2xlarge",
      "x1e.4xlarge",
      "x1e.8xlarge",
      "x1e.16xlarge",
      "x1e.32xlarge",
      "x2iedn.2xlarge"
     ],
     "Description": "Choose EC2 instance type. Default is t2.medium."
    },
    "InstanceDriveSize": {
     "Type": "Number",
     "Default": 250,
     "ConstraintDescription": "Must be between 250 and 1024 GB.",
     "Description": "Provide size of the root Drive in GB. Default is 250 GB. Minimum is 250 GB. Maximum is 1024 GB.",
     "MaxValue": 1024,
     "MinValue": 250
    }
   },
"Conditions": {
  "Launch3" : {
    "Fn::Equals" : [
      "3" , "3"
    ]
  },
  "Launch4" : {
    "Fn::Not" : [{
        "Fn::Equals" : [
            "3", 
            {"Ref" : "InstanceCount"}
        ]
      }
    ]
  },
  "Launch5" : {
    "Fn::And": [
        {"Fn::Not" : [{
            "Fn::Equals" : [
                "3", 
                {"Ref" : "InstanceCount"}
            ]
        }]},
        {"Fn::Not" : [{
            "Fn::Equals" : [
                "4", 
                {"Ref" : "InstanceCount"}
            ]
        }]}
    ]
    },
  "Launch6" : {
   "Fn::Or" : [
      {"Fn::Equals" : [
        "6", {"Ref" : "InstanceCount"}
        ]
      },
      {"Fn::Equals" : [
          7, {"Ref" : "InstanceCount"}
          ]
      }
    ]
  },
  "Launch7" : {
    "Fn::Equals" : [
      "7" , {"Ref" : "InstanceCount"}
    ]
  }
},
"Resources" : {
    "SpectrumDeployment1" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "BlockDeviceMappings": [
            {
             "DeviceName": "/dev/sda1",
             "Ebs": {
              "DeleteOnTermination": true,
              "VolumeSize": {
               "Ref": "InstanceDriveSize"
              },
              "VolumeType": "gp3"
             }
            }
           ],
        "IamInstanceProfile" : "PRECISELY-BASIC-SSM-EC2-Role",
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeypairName" },
        "ImageId" : { "Ref" : "AMIId" },
        "NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet" : { "Ref" : "SecurityGroupIds" },
          "SubnetId": { "Ref" : "SubnetId1" }
          } ]
      }
      },
      "SpectrumDeployment2" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "BlockDeviceMappings": [
            {
             "DeviceName": "/dev/sda1",
             "Ebs": {
              "DeleteOnTermination": true,
              "VolumeSize": {
               "Ref": "InstanceDriveSize"
              },
              "VolumeType": "gp3"
             }
            }
           ],
        "IamInstanceProfile" : "PRECISELY-BASIC-SSM-EC2-Role",
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeypairName" },
        "ImageId" : { "Ref" : "AMIId" },
        "NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet" : { "Ref" : "SecurityGroupIds" },
          "SubnetId": { "Ref" : "SubnetId2" }
          } ]
      }
      },
      "SpectrumDeployment3" : {
      "Condition" : "Launch3",
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "BlockDeviceMappings": [
            {
             "DeviceName": "/dev/sda1",
             "Ebs": {
              "DeleteOnTermination": true,
              "VolumeSize": {
               "Ref": "InstanceDriveSize"
              },
              "VolumeType": "gp3"
             }
            }
           ],
        "IamInstanceProfile" : "PRECISELY-BASIC-SSM-EC2-Role",
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeypairName" },
        "ImageId" : { "Ref" : "AMIId" },
        "NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet" : { "Ref" : "SecurityGroupIds" },
          "SubnetId": { "Ref" : "SubnetId1" }
          } ]
      }
      },
      "SpectrumDeployment4" : {
      "Condition" : "Launch4",
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "BlockDeviceMappings": [
            {
             "DeviceName": "/dev/sda1",
             "Ebs": {
              "DeleteOnTermination": true,
              "VolumeSize": {
               "Ref": "InstanceDriveSize"
              },
              "VolumeType": "gp3"
             }
            }
           ],
        "IamInstanceProfile" : "PRECISELY-BASIC-SSM-EC2-Role",
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeypairName" },
        "ImageId" : { "Ref" : "AMIId" },
        "NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet" : { "Ref" : "SecurityGroupIds" },
          "SubnetId": { "Ref" : "SubnetId2" }
          } ]
      }
      },
      "SpectrumDeployment5" : {
      "Condition" : "Launch5",
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "BlockDeviceMappings": [
            {
             "DeviceName": "/dev/sda1",
             "Ebs": {
              "DeleteOnTermination": true,
              "VolumeSize": {
               "Ref": "InstanceDriveSize"
              },
              "VolumeType": "gp3"
             }
            }
           ],
        "IamInstanceProfile" : "PRECISELY-BASIC-SSM-EC2-Role",
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeypairName" },
        "ImageId" : { "Ref" : "AMIId" },
        "NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet" : { "Ref" : "SecurityGroupIds" },
          "SubnetId": { "Ref" : "SubnetId1" }
          } ]
      }
      },
      "SpectrumDeployment6" : {
      "Condition" : "Launch6",
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "BlockDeviceMappings": [
            {
             "DeviceName": "/dev/sda1",
             "Ebs": {
              "DeleteOnTermination": true,
              "VolumeSize": {
               "Ref": "InstanceDriveSize"
              },
              "VolumeType": "gp3"
             }
            }
           ],
        "IamInstanceProfile" : "PRECISELY-BASIC-SSM-EC2-Role",
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeypairName" },
        "ImageId" : { "Ref" : "AMIId" },
        "NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet" : { "Ref" : "SecurityGroupIds" },
          "SubnetId": { "Ref" : "SubnetId2" }
          } ]
      }
      },
      "SpectrumDeployment7" : {
      "Condition" : "Launch7",
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "BlockDeviceMappings": [
            {
             "DeviceName": "/dev/sda1",
             "Ebs": {
              "DeleteOnTermination": true,
              "VolumeSize": {
               "Ref": "InstanceDriveSize"
              },
              "VolumeType": "gp3"
             }
            }
           ],
        "IamInstanceProfile" : "PRECISELY-BASIC-SSM-EC2-Role",
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeypairName" },
        "ImageId" : { "Ref" : "AMIId" },
        "NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet" : { "Ref" : "SecurityGroupIds" },
          "SubnetId": { "Ref" : "SubnetId1" }
          } ]
      }
      },
    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties" : {
        "IpAddressType" : { "Ref" : "IpAddressType" },
        "Name" : { "Ref" : "ELBName" },
        "Scheme" : { "Ref" : "Scheme" },
        "SecurityGroups" : { "Ref" : "SecurityGroupIds" },
        "SubnetMappings" : [ {
          "SubnetId" : { "Ref" : "SubnetId1" }
        },
          {"SubnetId" : { "Ref" : "SubnetId2" }
              
          }]
        }
      },
    "TargetGroup3" : {
      "Condition" : "Launch3",
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
        "Properties" : {
          "Name" : { "Ref" : "TargetGroupName" },
          "Port" : 80,
          "Protocol" : { "Ref" : "Protocol" },
          "Targets" : [{
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment1" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment2" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment3" , "PrivateIp" ] }
          }
           ],
          "TargetType" : { "Ref" : "TargetType" },
          "VpcId" : { "Ref" : "TargetVpcId" }
        }
      },
      "TargetGroup4" : {
        "Condition" : "Launch4",
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
        "Properties" : {
          "Name" : { "Ref" : "TargetGroupName" },
          "Port" : 80,
          "Protocol" : { "Ref" : "Protocol" },
          "Targets" : [{
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment1" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment2" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment3" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment4" , "PrivateIp" ] }
          }
           ],
          "TargetType" : { "Ref" : "TargetType" },
          "VpcId" : { "Ref" : "TargetVpcId" }
        }
      },
      "TargetGroup5" : {
        "Condition" : "Launch5",
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
        "Properties" : {
          "Name" : { "Ref" : "TargetGroupName" },
          "Port" : 80,
          "Protocol" : { "Ref" : "Protocol" },
          "Targets" : [{
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment1" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment2" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment3" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment4" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment5" , "PrivateIp" ] }
          }
           ],
          "TargetType" : { "Ref" : "TargetType" },
          "VpcId" : { "Ref" : "TargetVpcId" }
        }
      },
      "TargetGroup6" : {
        "Condition" : "Launch6",
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
        "Properties" : {
          "Name" : { "Ref" : "TargetGroupName" },
          "Port" : 80,
          "Protocol" : { "Ref" : "Protocol" },
          "Targets" : [{
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment1" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment2" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment3" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment4" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment5" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment6" , "PrivateIp" ] }
          }
           ],
          "TargetType" : { "Ref" : "TargetType" },
          "VpcId" : { "Ref" : "TargetVpcId" }
        }
      },
      "TargetGroup7" : {
        "Condition" : "Launch7",
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
        "Properties" : {
          "Name" : { "Ref" : "TargetGroupName" },
          "Port" : 80,
          "Protocol" : { "Ref" : "Protocol" },
          "Targets" : [{
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment1" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment2" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment3" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment4" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment5" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment6" , "PrivateIp" ] }
          },
          {
            "Id" : { "Fn::GetAtt" : [ "SpectrumDeployment7" , "PrivateIp" ] }
          }
           ],
          "TargetType" : { "Ref" : "TargetType" },
          "VpcId" : { "Ref" : "TargetVpcId" }
        }
      },
      
    "Listener3" :{
      "Condition" : "Launch3",
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
        "Properties" : {
          "DefaultActions" : [{
            "ForwardConfig" : {
              "TargetGroups" : [{
                "TargetGroupArn": { "Ref" : "TargetGroup3" }, "Weight" : 1
              }]
            },
            "TargetGroupArn" : { "Ref" : "TargetGroup3" },
            "Type" : { "Ref" : "ListenerType" }
            }
          ],
          "LoadBalancerArn" : { "Ref" : "ElasticLoadBalancer" },
          "Port" : 80,
          "Protocol" : { "Ref" : "Protocol" }
        }
      },
      "Listener4" :{
      "Condition" : "Launch4",
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
        "Properties" : {
          "DefaultActions" : [{
            "ForwardConfig" : {
              "TargetGroups" : [{
                "TargetGroupArn": { "Ref" : "TargetGroup4" }, "Weight" : 1
              }]
            },
            "TargetGroupArn" : { "Ref" : "TargetGroup4" },
            "Type" : { "Ref" : "ListenerType" }
            }
          ],
          "LoadBalancerArn" : { "Ref" : "ElasticLoadBalancer" },
          "Port" : 80,
          "Protocol" : { "Ref" : "Protocol" }
        }
      },
      "Listener5" :{
      "Condition" : "Launch5",
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
        "Properties" : {
          "DefaultActions" : [{
            "ForwardConfig" : {
              "TargetGroups" : [{
                "TargetGroupArn": { "Ref" : "TargetGroup5" }, "Weight" : 1
              }]
            },
            "TargetGroupArn" : { "Ref" : "TargetGroup5" },
            "Type" : { "Ref" : "ListenerType" }
            }
          ],
          "LoadBalancerArn" : { "Ref" : "ElasticLoadBalancer" },
          "Port" : 80,
          "Protocol" : { "Ref" : "Protocol" }
        }
      },
      "Listener6" :{
      "Condition" : "Launch6",
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
        "Properties" : {
          "DefaultActions" : [{
            "ForwardConfig" : {
              "TargetGroups" : [{
                "TargetGroupArn": { "Ref" : "TargetGroup6" }, "Weight" : 1
              }]
            },
            "TargetGroupArn" : { "Ref" : "TargetGroup6" },
            "Type" : { "Ref" : "ListenerType" }
            }
          ],
          "LoadBalancerArn" : { "Ref" : "ElasticLoadBalancer" },
          "Port" : 80,
          "Protocol" : { "Ref" : "Protocol" }
        }
      },
      "Listener7" :{
      "Condition" : "Launch7",
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
        "Properties" : {
          "DefaultActions" : [{
            "ForwardConfig" : {
              "TargetGroups" : [{
                "TargetGroupArn": { "Ref" : "TargetGroup7" }, "Weight" : 1
              }]
            },
            "TargetGroupArn" : { "Ref" : "TargetGroup7" },
            "Type" : { "Ref" : "ListenerType" }
            }
          ],
          "LoadBalancerArn" : { "Ref" : "ElasticLoadBalancer" },
          "Port" : 80,
          "Protocol" : { "Ref" : "Protocol" }
        }
      }
      
  },
"Outputs" : {
    "InstanceId" : {
      "Description" : "InstanceId of the newly created EC2 instance",
      "Value" : { "Ref" : "SpectrumDeployment1" }
    }
  }
}

